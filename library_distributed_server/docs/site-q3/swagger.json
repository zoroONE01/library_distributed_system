{
    "swagger": "2.0",
    "info": {
        "description": "This is a distributed library management system with horizontal fragmentation and full replication",
        "title": "Distributed Library Management System API - Site Q3",
        "termsOfService": "N/A",
        "contact": {
            "name": "API Support",
            "email": "dev@library.com"
        },
        "license": {
            "name": "MIT",
            "url": "https://opensource.org/licenses/MIT"
        },
        "version": "1.0"
    },
    "host": "localhost:8083",
    "basePath": "/",
    "paths": {
        "/auth/login": {
            "post": {
                "description": "Authenticate user using stored procedure and return JWT access token only",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Authentication"
                ],
                "summary": "User login",
                "parameters": [
                    {
                        "description": "Login credentials",
                        "name": "credentials",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/auth.LoginRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Login successful with access token",
                        "schema": {
                            "$ref": "#/definitions/auth.LoginResponse"
                        }
                    },
                    "400": {
                        "description": "Invalid request format",
                        "schema": {
                            "$ref": "#/definitions/models.ErrorResponse"
                        }
                    },
                    "401": {
                        "description": "Invalid credentials",
                        "schema": {
                            "$ref": "#/definitions/models.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/models.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/auth/logout": {
            "post": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Logout user (invalidate token on client side)",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Authentication"
                ],
                "summary": "User logout",
                "responses": {
                    "200": {
                        "description": "Logout successful",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/models.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/auth/profile": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Get detailed information about the currently authenticated user including role, branch, and permissions",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Authentication"
                ],
                "summary": "Get current user profile",
                "responses": {
                    "200": {
                        "description": "User profile information",
                        "schema": {
                            "$ref": "#/definitions/models.UserInfo"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/models.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/models.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/book-copies": {
            "get": {
                "description": "Retrieve book copies for the current site",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Book Copies"
                ],
                "summary": "Get book copies",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Page number (0-based, default 0)",
                        "name": "page",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Page size (default 20)",
                        "name": "size",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "List of book copies",
                        "schema": {
                            "$ref": "#/definitions/models.ListResponse"
                        }
                    },
                    "500": {
                        "description": "Failed to retrieve book copies",
                        "schema": {
                            "$ref": "#/definitions/models.ErrorResponse"
                        }
                    }
                }
            },
            "post": {
                "description": "Create a new book copy at the current site",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Book Copies"
                ],
                "summary": "Create book copy",
                "parameters": [
                    {
                        "description": "Book copy information",
                        "name": "bookCopy",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.QuyenSach"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Book copy created",
                        "schema": {
                            "$ref": "#/definitions/models.SuccessResponse"
                        }
                    },
                    "400": {
                        "description": "Invalid request",
                        "schema": {
                            "$ref": "#/definitions/models.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Failed to create book copy",
                        "schema": {
                            "$ref": "#/definitions/models.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/book-copies/{maQuyenSach}": {
            "get": {
                "description": "Get detailed information about a book copy",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Book Copies"
                ],
                "summary": "Get book copy by ID",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Book copy ID",
                        "name": "maQuyenSach",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Book copy details",
                        "schema": {
                            "$ref": "#/definitions/models.SuccessResponse"
                        }
                    },
                    "404": {
                        "description": "Book copy not found",
                        "schema": {
                            "$ref": "#/definitions/models.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Failed to retrieve book copy",
                        "schema": {
                            "$ref": "#/definitions/models.ErrorResponse"
                        }
                    }
                }
            },
            "put": {
                "description": "Update book copy information",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Book Copies"
                ],
                "summary": "Update book copy",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Book copy ID",
                        "name": "maQuyenSach",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Updated book copy information",
                        "name": "bookCopy",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.QuyenSach"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Book copy updated",
                        "schema": {
                            "$ref": "#/definitions/models.SuccessResponse"
                        }
                    },
                    "400": {
                        "description": "Invalid request",
                        "schema": {
                            "$ref": "#/definitions/models.ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Book copy not found",
                        "schema": {
                            "$ref": "#/definitions/models.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Failed to update book copy",
                        "schema": {
                            "$ref": "#/definitions/models.ErrorResponse"
                        }
                    }
                }
            },
            "delete": {
                "description": "Delete a book copy",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Book Copies"
                ],
                "summary": "Delete book copy",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Book copy ID",
                        "name": "maQuyenSach",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Book copy deleted",
                        "schema": {
                            "$ref": "#/definitions/models.SuccessResponse"
                        }
                    },
                    "404": {
                        "description": "Book copy not found",
                        "schema": {
                            "$ref": "#/definitions/models.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Failed to delete book copy",
                        "schema": {
                            "$ref": "#/definitions/models.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/books": {
            "get": {
                "description": "Retrieve all books in the catalog",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Books"
                ],
                "summary": "Get all books",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Page number (0-based, default 0)",
                        "name": "page",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Page size (default 20)",
                        "name": "size",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "List of books",
                        "schema": {
                            "$ref": "#/definitions/models.ListResponse"
                        }
                    },
                    "500": {
                        "description": "Failed to retrieve books",
                        "schema": {
                            "$ref": "#/definitions/models.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/books/search": {
            "get": {
                "description": "Search for books across all sites with availability info",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Books"
                ],
                "summary": "Search books across all sites",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Search query",
                        "name": "query",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Search results",
                        "schema": {
                            "$ref": "#/definitions/models.SuccessResponse"
                        }
                    },
                    "400": {
                        "description": "Invalid query",
                        "schema": {
                            "$ref": "#/definitions/models.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Search failed",
                        "schema": {
                            "$ref": "#/definitions/models.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/books/{isbn}": {
            "get": {
                "description": "Get detailed information about a book by its ISBN",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Books"
                ],
                "summary": "Get book by ISBN",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Book ISBN",
                        "name": "isbn",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Book details",
                        "schema": {
                            "$ref": "#/definitions/models.SuccessResponse"
                        }
                    },
                    "404": {
                        "description": "Book not found",
                        "schema": {
                            "$ref": "#/definitions/models.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Failed to retrieve book",
                        "schema": {
                            "$ref": "#/definitions/models.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/books/{isbn}/available": {
            "get": {
                "description": "Check if a book is available at the current site",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Books"
                ],
                "summary": "Check book availability",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Book ISBN",
                        "name": "isbn",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Availability info",
                        "schema": {
                            "$ref": "#/definitions/models.SuccessResponse"
                        }
                    },
                    "404": {
                        "description": "No available copies",
                        "schema": {
                            "$ref": "#/definitions/models.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Failed to check availability",
                        "schema": {
                            "$ref": "#/definitions/models.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/borrow": {
            "get": {
                "description": "Retrieve borrow transactions with role-based filtering",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Borrowing"
                ],
                "summary": "Get borrow transactions",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Page number (0-based, default 0)",
                        "name": "page",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Page size (default 20)",
                        "name": "size",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "List of borrow transactions",
                        "schema": {
                            "$ref": "#/definitions/models.ListResponse"
                        }
                    },
                    "500": {
                        "description": "Failed to retrieve borrows",
                        "schema": {
                            "$ref": "#/definitions/models.ErrorResponse"
                        }
                    }
                }
            },
            "post": {
                "description": "Create a new book borrowing transaction (Librarian only)",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Borrowing"
                ],
                "summary": "Create borrow transaction",
                "parameters": [
                    {
                        "description": "Borrow request",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.CreateBorrowRequest"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Borrow created successfully",
                        "schema": {
                            "$ref": "#/definitions/models.SuccessResponse"
                        }
                    },
                    "400": {
                        "description": "Invalid request format",
                        "schema": {
                            "$ref": "#/definitions/models.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Failed to create borrow",
                        "schema": {
                            "$ref": "#/definitions/models.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/borrow/detailed": {
            "get": {
                "description": "Get borrow records with book and reader details for Flutter app",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Borrowing"
                ],
                "summary": "Get detailed borrow records",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Page number (0-based, default 0)",
                        "name": "page",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Page size (default 20)",
                        "name": "size",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "List of detailed borrow records",
                        "schema": {
                            "$ref": "#/definitions/models.ListResponse"
                        }
                    },
                    "500": {
                        "description": "Failed to retrieve borrow records",
                        "schema": {
                            "$ref": "#/definitions/models.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/borrow/history/{maDG}": {
            "get": {
                "description": "Get borrowing history for a specific reader",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Borrowing"
                ],
                "summary": "Get borrow history for a reader",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Reader ID",
                        "name": "maDG",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "Page number (0-based, default 0)",
                        "name": "page",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Page size (default 20)",
                        "name": "size",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Reader's borrow history",
                        "schema": {
                            "$ref": "#/definitions/models.ListResponse"
                        }
                    },
                    "500": {
                        "description": "Failed to retrieve borrow history",
                        "schema": {
                            "$ref": "#/definitions/models.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/borrow/overdue": {
            "get": {
                "description": "Get list of overdue books for the site",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Borrowing"
                ],
                "summary": "Get overdue books",
                "responses": {
                    "200": {
                        "description": "List of overdue books",
                        "schema": {
                            "$ref": "#/definitions/models.SuccessResponse"
                        }
                    },
                    "500": {
                        "description": "Failed to retrieve overdue books",
                        "schema": {
                            "$ref": "#/definitions/models.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/borrow/return/{id}": {
            "put": {
                "description": "Process book return transaction (Librarian only)",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Borrowing"
                ],
                "summary": "Return borrowed book",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Book copy ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Return request",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.ReturnBookRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Book returned successfully",
                        "schema": {
                            "$ref": "#/definitions/models.SuccessResponse"
                        }
                    },
                    "400": {
                        "description": "Invalid request",
                        "schema": {
                            "$ref": "#/definitions/models.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Failed to return book",
                        "schema": {
                            "$ref": "#/definitions/models.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/borrow/statistics": {
            "get": {
                "description": "Get borrowing statistics for the site",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Borrowing"
                ],
                "summary": "Get borrowing statistics",
                "responses": {
                    "200": {
                        "description": "Borrowing statistics",
                        "schema": {
                            "$ref": "#/definitions/models.SuccessResponse"
                        }
                    },
                    "500": {
                        "description": "Failed to retrieve statistics",
                        "schema": {
                            "$ref": "#/definitions/models.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/coordinator/transfer-book": {
            "post": {
                "description": "Transfer a book copy from one site to another using distributed transaction coordination",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Coordinator"
                ],
                "summary": "Transfer book between sites using 2PC",
                "parameters": [
                    {
                        "description": "Book transfer request",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/main.TransferBookRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Book transferred successfully",
                        "schema": {
                            "$ref": "#/definitions/models.TransferBookResponse"
                        }
                    },
                    "400": {
                        "description": "Invalid request format",
                        "schema": {
                            "$ref": "#/definitions/models.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Failed to transfer book",
                        "schema": {
                            "$ref": "#/definitions/models.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/manager/books": {
            "post": {
                "description": "Create a new book in the system catalog using 2PC protocol (Manager only)",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Manager"
                ],
                "summary": "Create book in catalog",
                "parameters": [
                    {
                        "description": "Book information",
                        "name": "book",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.Sach"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Book created successfully",
                        "schema": {
                            "$ref": "#/definitions/models.SuccessResponse"
                        }
                    },
                    "400": {
                        "description": "Invalid request format",
                        "schema": {
                            "$ref": "#/definitions/models.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Failed to create book",
                        "schema": {
                            "$ref": "#/definitions/models.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/manager/books/search": {
            "get": {
                "description": "Search for books across all sites with availability information (Manager only)",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Manager"
                ],
                "summary": "Search books across all sites",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Search query",
                        "name": "query",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Search results with availability",
                        "schema": {
                            "$ref": "#/definitions/models.SuccessResponse"
                        }
                    },
                    "400": {
                        "description": "Invalid query",
                        "schema": {
                            "$ref": "#/definitions/models.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Search failed",
                        "schema": {
                            "$ref": "#/definitions/models.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/manager/books/{isbn}": {
            "get": {
                "description": "Get book information from catalog (Manager only)",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Manager"
                ],
                "summary": "Get book by ISBN",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Book ISBN",
                        "name": "isbn",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Book information",
                        "schema": {
                            "$ref": "#/definitions/models.SuccessResponse"
                        }
                    },
                    "404": {
                        "description": "Book not found",
                        "schema": {
                            "$ref": "#/definitions/models.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Failed to retrieve book",
                        "schema": {
                            "$ref": "#/definitions/models.ErrorResponse"
                        }
                    }
                }
            },
            "put": {
                "description": "Update book information using 2PC protocol (Manager only)",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Manager"
                ],
                "summary": "Update book in catalog",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Book ISBN",
                        "name": "isbn",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Updated book information",
                        "name": "book",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.Sach"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Book updated successfully",
                        "schema": {
                            "$ref": "#/definitions/models.SuccessResponse"
                        }
                    },
                    "400": {
                        "description": "Invalid request format",
                        "schema": {
                            "$ref": "#/definitions/models.ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Book not found",
                        "schema": {
                            "$ref": "#/definitions/models.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Failed to update book",
                        "schema": {
                            "$ref": "#/definitions/models.ErrorResponse"
                        }
                    }
                }
            },
            "delete": {
                "description": "Delete book from catalog using 2PC protocol (Manager only)",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Manager"
                ],
                "summary": "Delete book from catalog",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Book ISBN",
                        "name": "isbn",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Book deleted successfully",
                        "schema": {
                            "$ref": "#/definitions/models.SuccessResponse"
                        }
                    },
                    "404": {
                        "description": "Book not found",
                        "schema": {
                            "$ref": "#/definitions/models.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Failed to delete book",
                        "schema": {
                            "$ref": "#/definitions/models.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/manager/readers": {
            "get": {
                "description": "Get readers from all sites with pagination (Manager only)",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Manager"
                ],
                "summary": "Get all readers across all sites",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Page number (0-based, default 0)",
                        "name": "page",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Page size (default 20)",
                        "name": "size",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "List of all readers",
                        "schema": {
                            "$ref": "#/definitions/models.ListResponse"
                        }
                    },
                    "500": {
                        "description": "Failed to retrieve readers",
                        "schema": {
                            "$ref": "#/definitions/models.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/manager/statistics": {
            "get": {
                "description": "Get comprehensive statistics across all sites (Manager only)",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Manager"
                ],
                "summary": "Get system-wide statistics",
                "responses": {
                    "200": {
                        "description": "System statistics",
                        "schema": {
                            "$ref": "#/definitions/models.SuccessResponse"
                        }
                    },
                    "500": {
                        "description": "Failed to retrieve statistics",
                        "schema": {
                            "$ref": "#/definitions/models.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/manager/transfer": {
            "post": {
                "description": "Transfer a book copy from one site to another using 2PC protocol",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Manager"
                ],
                "summary": "Transfer book copy between sites",
                "parameters": [
                    {
                        "description": "Transfer request",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.TransferBookRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Book copy transferred successfully",
                        "schema": {
                            "$ref": "#/definitions/models.SuccessResponse"
                        }
                    },
                    "400": {
                        "description": "Invalid request format",
                        "schema": {
                            "$ref": "#/definitions/models.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Failed to transfer book copy",
                        "schema": {
                            "$ref": "#/definitions/models.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/readers": {
            "get": {
                "description": "Get readers with role-based filtering (ThuThu: local site, QuanLy: all sites)",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Readers"
                ],
                "summary": "Get all readers",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Page number (0-based, default 0)",
                        "name": "page",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Page size (default 20)",
                        "name": "size",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "List of readers",
                        "schema": {
                            "$ref": "#/definitions/models.ListResponse"
                        }
                    },
                    "500": {
                        "description": "Failed to retrieve readers",
                        "schema": {
                            "$ref": "#/definitions/models.ErrorResponse"
                        }
                    }
                }
            },
            "post": {
                "description": "Create a new reader at the user's site (ThuThu only)",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Readers"
                ],
                "summary": "Create new reader",
                "parameters": [
                    {
                        "description": "Reader information",
                        "name": "reader",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.DocGia"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Reader created successfully",
                        "schema": {
                            "$ref": "#/definitions/models.SuccessResponse"
                        }
                    },
                    "400": {
                        "description": "Invalid request format",
                        "schema": {
                            "$ref": "#/definitions/models.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Failed to create reader",
                        "schema": {
                            "$ref": "#/definitions/models.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/readers/search": {
            "get": {
                "description": "Search for readers across sites (role-based access)",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Readers"
                ],
                "summary": "Search readers",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Search query",
                        "name": "query",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "Page number (0-based, default 0)",
                        "name": "page",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Page size (default 20)",
                        "name": "size",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Search results",
                        "schema": {
                            "$ref": "#/definitions/models.ListResponse"
                        }
                    },
                    "400": {
                        "description": "Invalid query",
                        "schema": {
                            "$ref": "#/definitions/models.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Search failed",
                        "schema": {
                            "$ref": "#/definitions/models.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/readers/stats": {
            "get": {
                "description": "Get all readers with borrowing statistics for the site",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Readers"
                ],
                "summary": "Get readers with statistics",
                "responses": {
                    "200": {
                        "description": "Readers with statistics",
                        "schema": {
                            "$ref": "#/definitions/models.SuccessResponse"
                        }
                    },
                    "500": {
                        "description": "Failed to retrieve reader statistics",
                        "schema": {
                            "$ref": "#/definitions/models.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/readers/{maDG}": {
            "get": {
                "description": "Get reader information by ID with role-based access control",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Readers"
                ],
                "summary": "Get reader by ID",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Reader ID",
                        "name": "maDG",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Reader information",
                        "schema": {
                            "$ref": "#/definitions/models.SuccessResponse"
                        }
                    },
                    "404": {
                        "description": "Reader not found",
                        "schema": {
                            "$ref": "#/definitions/models.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Failed to retrieve reader",
                        "schema": {
                            "$ref": "#/definitions/models.ErrorResponse"
                        }
                    }
                }
            },
            "put": {
                "description": "Update reader information (ThuThu only)",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Readers"
                ],
                "summary": "Update reader",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Reader ID",
                        "name": "maDG",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Updated reader information",
                        "name": "reader",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.DocGia"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Reader updated successfully",
                        "schema": {
                            "$ref": "#/definitions/models.SuccessResponse"
                        }
                    },
                    "400": {
                        "description": "Invalid request format",
                        "schema": {
                            "$ref": "#/definitions/models.ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Reader not found",
                        "schema": {
                            "$ref": "#/definitions/models.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Failed to update reader",
                        "schema": {
                            "$ref": "#/definitions/models.ErrorResponse"
                        }
                    }
                }
            },
            "delete": {
                "description": "Delete reader (ThuThu only)",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Readers"
                ],
                "summary": "Delete reader",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Reader ID",
                        "name": "maDG",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Reader deleted successfully",
                        "schema": {
                            "$ref": "#/definitions/models.SuccessResponse"
                        }
                    },
                    "404": {
                        "description": "Reader not found",
                        "schema": {
                            "$ref": "#/definitions/models.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Failed to delete reader",
                        "schema": {
                            "$ref": "#/definitions/models.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/readers/{maDG}/stats": {
            "get": {
                "description": "Get reader information with borrowing statistics",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Readers"
                ],
                "summary": "Get reader with statistics",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Reader ID",
                        "name": "maDG",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Reader with statistics",
                        "schema": {
                            "$ref": "#/definitions/models.SuccessResponse"
                        }
                    },
                    "404": {
                        "description": "Reader not found",
                        "schema": {
                            "$ref": "#/definitions/models.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Failed to retrieve reader statistics",
                        "schema": {
                            "$ref": "#/definitions/models.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/stats/borrow-trends": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Get borrowing trends for site analysis",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Statistics"
                ],
                "summary": "Get borrowing trends",
                "parameters": [
                    {
                        "type": "integer",
                        "default": 30,
                        "description": "Number of days to analyze",
                        "name": "days",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Borrow trends retrieved successfully",
                        "schema": {
                            "$ref": "#/definitions/models.SuccessResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/models.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/models.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/stats/distributed": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Get distributed system health and statistics (Manager only)",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Statistics"
                ],
                "summary": "Get distributed system statistics",
                "responses": {
                    "200": {
                        "description": "Distributed statistics retrieved successfully",
                        "schema": {
                            "$ref": "#/definitions/models.SuccessResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/models.ErrorResponse"
                        }
                    },
                    "403": {
                        "description": "Access denied - Manager role required",
                        "schema": {
                            "$ref": "#/definitions/models.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/models.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/stats/health": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Get system health status across all sites",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Statistics"
                ],
                "summary": "Get system health",
                "responses": {
                    "200": {
                        "description": "System health retrieved successfully",
                        "schema": {
                            "$ref": "#/definitions/models.SuccessResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/models.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/models.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/stats/popular-books": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Get popular books based on borrowing frequency",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Statistics"
                ],
                "summary": "Get popular books statistics",
                "parameters": [
                    {
                        "type": "integer",
                        "default": 10,
                        "description": "Number of books to return",
                        "name": "limit",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Popular books statistics retrieved successfully",
                        "schema": {
                            "$ref": "#/definitions/models.SuccessResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/models.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/models.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/stats/readers": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Get readers with borrowing statistics with pagination (enhanced for Flutter app)",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Statistics"
                ],
                "summary": "Get readers with statistics and pagination",
                "parameters": [
                    {
                        "type": "integer",
                        "default": 0,
                        "description": "Page number (0-based)",
                        "name": "page",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "default": 20,
                        "description": "Items per page",
                        "name": "size",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Search term for reader name or ID",
                        "name": "search",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Readers with stats retrieved successfully",
                        "schema": {
                            "$ref": "#/definitions/models.ListResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/models.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/models.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/stats/site": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Get statistics for current site (available to both roles)",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Statistics"
                ],
                "summary": "Get site statistics",
                "responses": {
                    "200": {
                        "description": "Site statistics retrieved successfully",
                        "schema": {
                            "$ref": "#/definitions/models.SuccessResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/models.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/models.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/stats/system": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Get comprehensive system statistics across all sites (Manager only)",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Statistics"
                ],
                "summary": "Get system statistics",
                "responses": {
                    "200": {
                        "description": "System statistics retrieved successfully",
                        "schema": {
                            "$ref": "#/definitions/models.SystemStatsResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/models.ErrorResponse"
                        }
                    },
                    "403": {
                        "description": "Access denied - Manager role required",
                        "schema": {
                            "$ref": "#/definitions/models.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/models.ErrorResponse"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "auth.LoginRequest": {
            "description": "User login credentials",
            "type": "object",
            "required": [
                "password",
                "username"
            ],
            "properties": {
                "password": {
                    "description": "Password",
                    "type": "string",
                    "example": "password123"
                },
                "username": {
                    "description": "Username",
                    "type": "string",
                    "example": "thuthu01"
                }
            }
        },
        "auth.LoginResponse": {
            "description": "Successful login response with JWT access token only",
            "type": "object",
            "properties": {
                "accessToken": {
                    "description": "JWT access token",
                    "type": "string",
                    "example": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9..."
                }
            }
        },
        "main.TransferBookRequest": {
            "type": "object",
            "required": [
                "fromSite",
                "maQuyenSach",
                "toSite"
            ],
            "properties": {
                "fromSite": {
                    "description": "Source site ID",
                    "type": "string",
                    "example": "Q1"
                },
                "maQuyenSach": {
                    "description": "Book copy ID to transfer",
                    "type": "string",
                    "example": "QS001"
                },
                "toSite": {
                    "description": "Destination site ID",
                    "type": "string",
                    "example": "Q3"
                }
            }
        },
        "models.BookWithAvailability": {
            "description": "Book information combined with availability count for client applications",
            "type": "object",
            "properties": {
                "availableCount": {
                    "description": "Available copies count",
                    "type": "integer",
                    "example": 5
                },
                "borrowedCount": {
                    "description": "Currently borrowed count",
                    "type": "integer",
                    "example": 5
                },
                "isbn": {
                    "description": "Book ISBN (ID)",
                    "type": "string",
                    "example": "978-0-123456-78-9"
                },
                "tacGia": {
                    "description": "Author name",
                    "type": "string",
                    "example": "Nguyễn Văn A"
                },
                "tenSach": {
                    "description": "Book title",
                    "type": "string",
                    "example": "Lập trình Go"
                },
                "totalCount": {
                    "description": "Total copies count",
                    "type": "integer",
                    "example": 10
                }
            }
        },
        "models.CreateBorrowRequest": {
            "description": "Request payload for creating a borrow transaction",
            "type": "object",
            "required": [
                "maDG",
                "maQuyenSach"
            ],
            "properties": {
                "maDG": {
                    "description": "Reader ID",
                    "type": "string",
                    "example": "DG001"
                },
                "maQuyenSach": {
                    "description": "Book copy ID",
                    "type": "string",
                    "example": "QS001"
                }
            }
        },
        "models.DocGia": {
            "description": "Reader information (fragmented by registration branch)",
            "type": "object",
            "required": [
                "hoTen",
                "maCNDangKy",
                "maDG"
            ],
            "properties": {
                "hoTen": {
                    "description": "Reader name",
                    "type": "string",
                    "example": "Nguyễn Văn B"
                },
                "maCNDangKy": {
                    "description": "Registration branch",
                    "type": "string",
                    "example": "Q1"
                },
                "maDG": {
                    "description": "Reader ID",
                    "type": "string",
                    "example": "DG001"
                }
            }
        },
        "models.ErrorResponse": {
            "description": "Generic error response",
            "type": "object",
            "properties": {
                "details": {
                    "description": "Error details (optional)"
                },
                "error": {
                    "description": "Error message",
                    "type": "string",
                    "example": "Bad Request"
                }
            }
        },
        "models.ListResponse": {
            "description": "Generic paginated list response matching Flutter BookListModel structure",
            "type": "object",
            "properties": {
                "items": {
                    "description": "List of items (matches Flutter items field)"
                },
                "paging": {
                    "description": "Pagination info (matches Flutter paging field)",
                    "allOf": [
                        {
                            "$ref": "#/definitions/models.PagingInfo"
                        }
                    ]
                }
            }
        },
        "models.PagingInfo": {
            "description": "Pagination information matching Flutter PagingModel structure",
            "type": "object",
            "properties": {
                "page": {
                    "description": "Current page number (0-based, matches Flutter)",
                    "type": "integer",
                    "example": 0
                },
                "size": {
                    "description": "Items per page (matches Flutter)",
                    "type": "integer",
                    "example": 20
                },
                "totalPages": {
                    "description": "Total number of pages (matches Flutter)",
                    "type": "integer",
                    "example": 10
                }
            }
        },
        "models.QuyenSach": {
            "description": "Book copy information (fragmented by branch)",
            "type": "object",
            "required": [
                "isbn",
                "maCN",
                "maQuyenSach"
            ],
            "properties": {
                "isbn": {
                    "description": "Book ISBN",
                    "type": "string",
                    "example": "978-0-123456-78-9"
                },
                "maCN": {
                    "description": "Branch code",
                    "type": "string",
                    "example": "Q1"
                },
                "maQuyenSach": {
                    "description": "Book copy ID",
                    "type": "string",
                    "example": "QS001"
                },
                "tinhTrang": {
                    "description": "Book status",
                    "type": "string",
                    "enum": [
                        "Có sẵn",
                        "Đang mượn",
                        "Bị hỏng"
                    ],
                    "example": "Có sẵn"
                }
            }
        },
        "models.ReturnBookRequest": {
            "description": "Request payload for returning a borrowed book",
            "type": "object",
            "properties": {
                "maQuyenSach": {
                    "description": "Book copy ID (optional)",
                    "type": "string",
                    "example": "QS001"
                },
                "ngayTra": {
                    "description": "Return date",
                    "type": "string",
                    "example": "2025-01-20T14:00:00Z"
                }
            }
        },
        "models.Sach": {
            "description": "Book information (fully replicated across all sites)",
            "type": "object",
            "required": [
                "isbn",
                "tenSach"
            ],
            "properties": {
                "isbn": {
                    "description": "Book ISBN",
                    "type": "string",
                    "example": "978-0-123456-78-9"
                },
                "tacGia": {
                    "description": "Author name",
                    "type": "string",
                    "example": "Nguyễn Văn A"
                },
                "tenSach": {
                    "description": "Book title",
                    "type": "string",
                    "example": "Lập trình Go"
                }
            }
        },
        "models.SiteStats": {
            "description": "Site-specific statistics",
            "type": "object",
            "properties": {
                "booksOnLoan": {
                    "description": "Books currently on loan",
                    "type": "integer",
                    "example": 75
                },
                "siteID": {
                    "description": "Site identifier",
                    "type": "string",
                    "example": "Q1"
                },
                "totalBooks": {
                    "description": "Total books in this site",
                    "type": "integer",
                    "example": 500
                },
                "totalReaders": {
                    "description": "Total registered readers",
                    "type": "integer",
                    "example": 200
                }
            }
        },
        "models.SuccessResponse": {
            "description": "Generic success response",
            "type": "object",
            "properties": {
                "data": {
                    "description": "Response data (optional)"
                },
                "message": {
                    "description": "Success message",
                    "type": "string",
                    "example": "Operation completed successfully"
                },
                "success": {
                    "description": "Operation success status",
                    "type": "boolean",
                    "example": true
                }
            }
        },
        "models.SystemStatsResponse": {
            "description": "Comprehensive system statistics across all sites",
            "type": "object",
            "properties": {
                "activeBorrows": {
                    "description": "Currently borrowed books",
                    "type": "integer",
                    "example": 500
                },
                "generatedAt": {
                    "description": "Stats generation time",
                    "type": "string",
                    "example": "2025-01-15T10:00:00Z"
                },
                "overdueBooks": {
                    "description": "Overdue books",
                    "type": "integer",
                    "example": 50
                },
                "popularBooks": {
                    "description": "Most borrowed books",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/models.BookWithAvailability"
                    }
                },
                "siteStats": {
                    "description": "Per-site statistics",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/models.SiteStats"
                    }
                },
                "totalBooks": {
                    "description": "Total books in catalog",
                    "type": "integer",
                    "example": 1000
                },
                "totalCopies": {
                    "description": "Total book copies",
                    "type": "integer",
                    "example": 5000
                },
                "totalReaders": {
                    "description": "Total registered readers",
                    "type": "integer",
                    "example": 2000
                }
            }
        },
        "models.TransferBookRequest": {
            "description": "Request payload for transferring a book copy between sites using 2PC protocol",
            "type": "object",
            "required": [
                "fromSite",
                "maQuyenSach",
                "toSite"
            ],
            "properties": {
                "fromSite": {
                    "description": "Source site ID",
                    "type": "string",
                    "example": "Q1"
                },
                "maQuyenSach": {
                    "description": "Book copy ID to transfer",
                    "type": "string",
                    "example": "QS001"
                },
                "toSite": {
                    "description": "Destination site ID",
                    "type": "string",
                    "example": "Q3"
                }
            }
        },
        "models.TransferBookResponse": {
            "description": "Response after successful book transfer using 2PC protocol",
            "type": "object",
            "properties": {
                "coordinator": {
                    "description": "Coordinator service",
                    "type": "string",
                    "example": "Distributed Transaction Coordinator"
                },
                "fromSite": {
                    "description": "Source site ID",
                    "type": "string",
                    "example": "Q1"
                },
                "maQuyenSach": {
                    "description": "Transferred book copy ID",
                    "type": "string",
                    "example": "QS001"
                },
                "message": {
                    "description": "Success message",
                    "type": "string",
                    "example": "Book transferred successfully using 2PC protocol"
                },
                "protocol": {
                    "description": "Protocol used",
                    "type": "string",
                    "example": "Two-Phase Commit (2PC)"
                },
                "toSite": {
                    "description": "Destination site ID",
                    "type": "string",
                    "example": "Q3"
                }
            }
        },
        "models.UserInfo": {
            "description": "Detailed user information including permissions",
            "type": "object",
            "required": [
                "username"
            ],
            "properties": {
                "id": {
                    "description": "User ID",
                    "type": "string",
                    "example": "user123"
                },
                "maCN": {
                    "description": "Branch code (for THUTHU)",
                    "type": "string",
                    "example": "Q1"
                },
                "permissions": {
                    "description": "User permissions",
                    "type": "string",
                    "example": "SELECT,INSERT,UPDATE,EXECUTE"
                },
                "role": {
                    "description": "User role",
                    "type": "string",
                    "enum": [
                        "THUTHU",
                        "QUANLY"
                    ],
                    "example": "THUTHU"
                },
                "username": {
                    "description": "Username",
                    "type": "string",
                    "example": "ThuThu_Q1"
                }
            }
        }
    },
    "securityDefinitions": {
        "BearerAuth": {
            "description": "Type \"Bearer\" followed by a space and JWT token.",
            "type": "apiKey",
            "name": "Authorization",
            "in": "header"
        }
    }
}